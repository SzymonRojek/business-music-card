{"version":3,"sources":["js/script.js"],"names":["navigationHamburgerButton","document","querySelector","navigationArrowButton","navigationList","navigationLinks","querySelectorAll","fadeLinks","forEach","link","window","matchMedia","matches","classList","contains","add","remove","setNavigationHamburgerButton","toggle","setAttribute","setTextNavigationArrowButton","innerText","setNavigationArrowButton","resetStatesWhenLinkPressed","addEventListener","removeFadeLinksAnimation","pageYOffset","body","modeSwitcher","switcherText","enableDarkMode","checked","localStorage","setItem","disableDarkMode","getUserThemePreferences","isThemeAvailable","theme","getItem","toggleButton","init"],"mappings":";AAEQA,IAAAA,EAA4BC,SAASC,cAAc,gCACnDC,EAAwBF,SAASC,cAAc,iCAC/CE,EAAiBH,SAASC,cAAc,qBACxCG,EAAkBJ,SAASK,iBAAiB,qBAE5CC,EAAY,WAChBF,EAAgBG,QAAS,SAAAC,GAClBC,OAAOC,WAAW,sBAAsBC,UAAYH,EAAKI,UAAUC,SAAS,aAC/EL,EAAKI,UAAUE,IAAI,aAEnBN,EAAKI,UAAUG,OAAO,gBAKtBC,EAA+B,WACnCjB,EAA0Ba,UAAUK,OAAO,aAC3Cd,EAAeS,UAAUK,OAAO,0BAChCX,IAEIH,EAAeS,UAAUC,SAAS,0BACpCd,EAA0BmB,aAAa,iBAAiB,IAExDnB,EAA0BmB,aAAa,iBAAiB,GACxDhB,EAAsBgB,aAAa,iBAAiB,KAIlDC,EAA+B,WAGnCjB,EAAsBkB,UAFH,MAEelB,EAAsBkB,UADtC,IADC,KAKfC,EAA2B,WAC/BlB,EAAeS,UAAUK,OAAO,0BAE5Bd,EAAeS,UAAUC,SAAS,2BACpCd,EAA0Ba,UAAUE,IAAI,aACxCZ,EAAsBgB,aAAa,iBAAiB,KAEpDnB,EAA0Ba,UAAUG,OAAO,aAC3Cb,EAAsBgB,aAAa,iBAAiB,GACpDnB,EAA0BmB,aAAa,iBAAiB,IAE1DZ,IACAa,KAGIG,EAA6B,WACjClB,EAAgBG,QAAS,SAAAC,GACvBA,EAAKe,iBAAiB,QAAS,WAC7BpB,EAAeS,UAAUG,OAAO,0BAChChB,EAA0Ba,UAAUG,OAAO,aAC3Cb,EAAsBgB,aAAa,iBAAiB,GACpDnB,EAA0BmB,aAAa,iBAAiB,GACxDZ,SAKNkB,yBAA2B,WACzBf,OAAOgB,YAAc,IAAMvB,EAAsBU,UAAUE,IAAI,wCAA0CZ,EAAsBU,UAAUG,OAAO,yCAK5IW,IAAAA,EAAO1B,SAASC,cAAc,QAAQW,UACtCe,EAAe3B,SAASC,cAAc,sBACtC2B,EAAe5B,SAASC,cAAc,mBAEtC4B,EAAiB,WACrBF,EAAaG,SAAU,EACvBJ,EAAKZ,IAAK,QACViB,aAAaC,QAAS,QAAS,QAC/BJ,EAAaR,UAAY,QACzBO,EAAaT,aAAc,gBAAgB,IAGvCe,EAAkB,WACtBN,EAAaG,SAAU,EACvBJ,EAAKX,OAAQ,QACbgB,aAAaC,QAAS,QAAS,SAC/BJ,EAAaR,UAAY,OACzBO,EAAaT,aAAc,gBAAgB,IAGvCgB,EAA0B,WACFzB,OAAOC,WAAY,gCAAiCC,QAC1DkB,IAAmBI,KAGrCE,EAAmB,WACjBC,IAAAA,EAAQL,aAAaM,QAAS,SAC7BD,EACO,SAAVA,EAAmBP,IAAmBI,IAEtCC,KAIAI,EAAe,WAET,UADIP,aAAaM,QAAS,SAChBR,IAAmBI,KAGnCM,EAAO,WACXxC,EAA0BwB,iBAAiB,QAASP,GACpDd,EAAsBqB,iBAAiB,QAASF,GAChDC,IACAb,OAAOc,iBAAkB,SAAUC,0BACnCW,IACAR,EAAaJ,iBAAiB,QAASe,IAGzCC","file":"script.6575731d.js","sourceRoot":"../src","sourcesContent":["{\n\n  const navigationHamburgerButton = document.querySelector('.navigation__hamburgerButton');\n  const navigationArrowButton = document.querySelector('.navigation__list-arrowButton');\n  const navigationList = document.querySelector('.navigation__list');\n  const navigationLinks = document.querySelectorAll('.navigation__link');\n\n  const fadeLinks = () => {\n    navigationLinks.forEach( link => {\n      if ( window.matchMedia('(max-width: 767px)').matches && !link.classList.contains('linksFade') ) {\n        link.classList.add('linksFade');\n      } else {\n        link.classList.remove('linksFade');\n      }\n    })\n  }\n\n  const setNavigationHamburgerButton = () => {\n    navigationHamburgerButton.classList.toggle('js-active');\n    navigationList.classList.toggle('navigation__list--open');\n    fadeLinks();\n\n    if (navigationList.classList.contains('navigation__list--open')) {\n      navigationHamburgerButton.setAttribute('aria-expanded', true); \n    } else {\n      navigationHamburgerButton.setAttribute('aria-expanded', false);\n      navigationArrowButton.setAttribute('aria-expanded', false);\n    }\n  }\n\n  const setTextNavigationArrowButton = () => {\n    const arrowRight = '>';\n    const arrowLeft = '<';\n    navigationArrowButton.innerText = navigationArrowButton.innerText === arrowRight ? arrowLeft : arrowRight;\n  }\n\n  const setNavigationArrowButton = () => {\n    navigationList.classList.toggle('navigation__list--open');\n    \n    if (navigationList.classList.contains('navigation__list--open')) {\n      navigationHamburgerButton.classList.add('js-active');\n      navigationArrowButton.setAttribute('aria-expanded', true)\n    } else {\n      navigationHamburgerButton.classList.remove('js-active');\n      navigationArrowButton.setAttribute('aria-expanded', false);\n      navigationHamburgerButton.setAttribute('aria-expanded', false);\n    }\n    fadeLinks();\n    setTextNavigationArrowButton();\n  }\n\n  const resetStatesWhenLinkPressed = () => {\n    navigationLinks.forEach( link => {\n      link.addEventListener('click', () => {\n        navigationList.classList.remove('navigation__list--open');\n        navigationHamburgerButton.classList.remove('js-active');\n        navigationArrowButton.setAttribute('aria-expanded', false);\n        navigationHamburgerButton.setAttribute('aria-expanded', false);\n        fadeLinks();\n      })\n    })\n  }\n\n  removeFadeLinksAnimation = () => {\n    window.pageYOffset > 200 ? navigationArrowButton.classList.add('navigation__list-arrowButton--active') : navigationArrowButton.classList.remove('navigation__list-arrowButton--active');\n  }\n\n\n  // theme mode \n  const body = document.querySelector('body').classList; \n  const modeSwitcher = document.querySelector('.js-switcher__mode');\n  const switcherText = document.querySelector('.switcher__text');\n\n  const enableDarkMode = () => {\n    modeSwitcher.checked = true;\n    body.add( 'dark' );\n    localStorage.setItem( 'theme', 'dark' );\n    switcherText.innerText = 'light';\n    modeSwitcher.setAttribute( 'aria-checked', true );\n  }\n\n  const disableDarkMode = () => {\n    modeSwitcher.checked = false;\n    body.remove( 'dark' );\n    localStorage.setItem( 'theme', 'light' );\n    switcherText.innerText = 'dark';\n    modeSwitcher.setAttribute( 'aria-checked', false );\n  }\n\n  const getUserThemePreferences = () => {\n    const userThemePreference = window.matchMedia( '(prefers-color-scheme: dark)' ).matches;\n    userThemePreference ? enableDarkMode() : disableDarkMode();\n  }\n\n  const isThemeAvailable = () => {\n    const theme = localStorage.getItem( 'theme' );\n      if ( theme ) {\n        theme === 'dark' ? enableDarkMode() : disableDarkMode();\n      } else {\n        getUserThemePreferences();\n      }\n  }\n\n  const toggleButton = () => {\n    const theme = localStorage.getItem( 'theme' );\n    theme === 'light' ? enableDarkMode() : disableDarkMode();\n  }\n\n  const init = () => {\n    navigationHamburgerButton.addEventListener('click', setNavigationHamburgerButton);\n    navigationArrowButton.addEventListener('click', setNavigationArrowButton);\n    resetStatesWhenLinkPressed();\n    window.addEventListener( 'scroll', removeFadeLinksAnimation);\n    isThemeAvailable();\n    modeSwitcher.addEventListener('click', toggleButton);\n  }\n\n  init();\n}"]}