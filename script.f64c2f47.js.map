{"version":3,"sources":["js/script.js"],"names":["hamburgerButton","document","querySelector","sideNavigationButton","navigationList","navigationLinks","querySelectorAll","addAnimationNavigationLinks","forEach","link","window","matchMedia","matches","classList","contains","add","remove","toggleClasses","toggle","openNavigationByHamburgerButton","setAttribute","toggleTextSideNavigationButton","innerText","showNavigationSideButton","pageYOffset","openNavigationBySideButton","resetStatesWhenLinkPressed","addEventListener","modeSwitcher","body","changeTextSwitcher","textSwitcher","enableDarkMode","localStorage","setItem","checked","disableDarkMode","toggleThemeButton","theme","getItem","getUserThemePreferences","checkTheme","onFormSubmit","event","preventDefault","init","submitButton"],"mappings":";AACQA,IAAAA,EAAkBC,SAASC,cAAc,uBACzCC,EAAuBF,SAASC,cAAc,4BAC9CE,EAAiBH,SAASC,cAAc,sBACxCG,EAAkBJ,SAASK,iBAAiB,sBAE5CC,EAA8B,WAClCF,EAAgBG,QAAS,SAAAC,GAClBC,OAAOC,WAAW,sBAAsBC,UAAYH,EAAKI,UAAUC,SAAS,aAC/EL,EAAKI,UAAUE,IAAI,aAEnBN,EAAKI,UAAUG,OAAO,gBAKtBC,EAAgB,WACpBjB,EAAgBa,UAAUK,OAAO,aACjCd,EAAeS,UAAUK,OAAO,2BAG5BC,EAAkC,WACtCF,IACAV,IAEIH,EAAeS,UAAUC,SAAS,0BACpCd,EAAgBoB,aAAa,iBAAiB,IAE9CpB,EAAgBoB,aAAa,iBAAiB,GAC9CjB,EAAqBiB,aAAa,iBAAiB,KAIjDC,EAAiC,WAGrClB,EAAqBmB,UAFF,MAEcnB,EAAqBmB,UADpC,IADC,KAKrBC,yBAA2B,WACzBb,OAAOc,YAAc,IAAMrB,EAAqBU,UAAUE,IAAI,iDAAmDZ,EAAqBU,UAAUG,OAAO,kDAGnJS,IAAAA,EAA6B,WACjCR,IAEIb,EAAeS,UAAUC,SAAS,0BACpCX,EAAqBiB,aAAa,iBAAiB,IAEnDjB,EAAqBiB,aAAa,iBAAiB,GACnDpB,EAAgBoB,aAAa,iBAAiB,IAEhDb,IACAc,KAGIK,EAA6B,WACjCrB,EAAgBG,QAAS,SAAAC,GACvBA,EAAKkB,iBAAiB,QAAS,WAC7BvB,EAAeS,UAAUG,OAAO,0BAChChB,EAAgBa,UAAUG,OAAO,aACjCb,EAAqBiB,aAAa,iBAAiB,GACnDpB,EAAgBoB,aAAa,iBAAiB,GAC9Cb,SAQAqB,EAAe3B,SAASC,cAAc,oBACtC2B,EAAO5B,SAASC,cAAc,QAAQW,UAEtCiB,EAAqB,WACnBC,IAAAA,EAAe9B,SAASC,cAAc,mBAC5C6B,EAAaT,UAAuC,UAA3BS,EAAaT,UAAwB,OAAS,SAGnEU,EAAiB,WACrBH,EAAKd,IAAI,QACTe,IACAG,aAAaC,QAAS,QAAS,QAC/BN,EAAaO,SAAU,EACvBP,EAAaR,aAAc,gBAAgB,IAGvCgB,EAAkB,WACtBP,EAAKb,OAAO,QACZc,IACAG,aAAaC,QAAS,QAAS,SAC/BN,EAAaO,SAAU,EACvBP,EAAaR,aAAc,gBAAgB,IAGvCiB,EAAoB,SAAAC,GAEd,UADFL,aAAaM,QAAS,SACVP,IAAmBI,KAGnCI,EAA0B,WACF9B,OAAOC,WAAY,gCAAiCC,QAC1DoB,IAAmBI,KAGrCK,EAAa,SAAAH,GACZA,EACO,SAAVA,EAAmBN,IAAmBI,IAEtCI,KAIEE,EAAe,SAAAC,GACnBA,EAAMC,gBAGFC,EAAO,WACLC,IAAAA,EAAe7C,SAASC,cAAc,oBACtCoC,EAAQL,aAAaM,QAAS,SAEpCvC,EAAgB2B,iBAAiB,QAASR,GAC1ChB,EAAqBwB,iBAAiB,QAASF,GAC/CC,IACAhB,OAAOiB,iBAAkB,SAAUJ,0BACnCkB,EAAWH,GACXV,EAAaD,iBAAiB,QAASU,GACvCS,EAAanB,iBAAiB,SAAUe,IAG1CG","file":"script.f64c2f47.js","sourceRoot":"../src","sourcesContent":["{\n  const hamburgerButton = document.querySelector('.js-hamburgerButton');\n  const sideNavigationButton = document.querySelector('.js-sideNavigationButton');\n  const navigationList = document.querySelector('.js-navigationList');\n  const navigationLinks = document.querySelectorAll('.js-navigationLink');\n\n  const addAnimationNavigationLinks = () => {\n    navigationLinks.forEach( link => {\n      if ( window.matchMedia('(max-width: 767px)').matches && !link.classList.contains('linksFade') ) {\n        link.classList.add('linksFade');\n      } else {\n        link.classList.remove('linksFade');\n      }\n    })\n  }\n\n  const toggleClasses = () => {\n    hamburgerButton.classList.toggle('js-active');\n    navigationList.classList.toggle('navigation__list--open');\n  }\n\n  const openNavigationByHamburgerButton = () => {\n    toggleClasses();\n    addAnimationNavigationLinks();\n\n    if (navigationList.classList.contains('navigation__list--open')) {\n      hamburgerButton.setAttribute('aria-expanded', true); \n    } else {\n      hamburgerButton.setAttribute('aria-expanded', false);\n      sideNavigationButton.setAttribute('aria-expanded', false);\n    }\n  }\n\n  const toggleTextSideNavigationButton = () => {\n    const arrowRight = 'ткв';\n    const arrowLeft = 'ткб';\n    sideNavigationButton.innerText = sideNavigationButton.innerText === arrowRight ? arrowLeft : arrowRight;\n  }\n\n  showNavigationSideButton = () => {\n    window.pageYOffset > 200 ? sideNavigationButton.classList.add('navigation__list-sideNavigationButton--active') : sideNavigationButton.classList.remove('navigation__list-sideNavigationButton--active');\n  }\n\n  const openNavigationBySideButton = () => {\n    toggleClasses();\n    \n    if (navigationList.classList.contains('navigation__list--open')) {\n      sideNavigationButton.setAttribute('aria-expanded', true)\n    } else {\n      sideNavigationButton.setAttribute('aria-expanded', false);\n      hamburgerButton.setAttribute('aria-expanded', false);\n    }\n    addAnimationNavigationLinks();\n    toggleTextSideNavigationButton();\n  }\n\n  const resetStatesWhenLinkPressed = () => {\n    navigationLinks.forEach( link => {\n      link.addEventListener('click', () => {\n        navigationList.classList.remove('navigation__list--open');\n        hamburgerButton.classList.remove('js-active');\n        sideNavigationButton.setAttribute('aria-expanded', false);\n        hamburgerButton.setAttribute('aria-expanded', false);\n        addAnimationNavigationLinks();\n      })\n    })\n  }\n\n \n  // theme mode & switcher\n\n  const modeSwitcher = document.querySelector('.js-switcherMode');\n  const body = document.querySelector('body').classList; \n\n  const changeTextSwitcher = () => {\n    const textSwitcher = document.querySelector('.switcher__text');\n    textSwitcher.innerText = textSwitcher.innerText === 'light' ? 'dark' : 'light';\n  }\n\n  const enableDarkMode = () => {\n    body.add('dark');\n    changeTextSwitcher();\n    localStorage.setItem( 'theme', 'dark' );\n    modeSwitcher.checked = true;\n    modeSwitcher.setAttribute( 'aria-checked', true );\n  }\n\n  const disableDarkMode = () => {\n    body.remove('dark');\n    changeTextSwitcher();\n    localStorage.setItem( 'theme', 'light' );\n    modeSwitcher.checked = false;\n    modeSwitcher.setAttribute( 'aria-checked', false );\n  }\n\n  const toggleThemeButton = theme => {\n    theme = localStorage.getItem( 'theme' );\n    theme === 'light' ? enableDarkMode() : disableDarkMode();\n  }\n\n  const getUserThemePreferences = () => {\n    const userThemePreference = window.matchMedia( '(prefers-color-scheme: dark)' ).matches;\n    userThemePreference ? enableDarkMode() : disableDarkMode();\n  }\n\n  const checkTheme = theme => {\n    if ( theme ) {\n      theme === 'dark' ? enableDarkMode() : disableDarkMode();\n    } else {\n      getUserThemePreferences();\n    }\n  }\n\n  const onFormSubmit = event => {\n    event.preventDefault;\n  }\n\n  const init = () => {\n    const submitButton = document.querySelector('.js-submitButton');\n    const theme = localStorage.getItem( 'theme' );\n  \n    hamburgerButton.addEventListener('click', openNavigationByHamburgerButton);\n    sideNavigationButton.addEventListener('click', openNavigationBySideButton);\n    resetStatesWhenLinkPressed();\n    window.addEventListener( 'scroll', showNavigationSideButton);\n    checkTheme(theme);\n    modeSwitcher.addEventListener('click', toggleThemeButton);\n    submitButton.addEventListener('submit', onFormSubmit);\n  }\n\n  init();\n}"]}