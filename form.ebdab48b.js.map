{"version":3,"sources":["js/form.js"],"names":["$form","document","querySelector","$submitFormButton","errorMessage","getElementsByClassName","listFields","formListInputs","successIcons","querySelectorAll","init","addEventListener","onFormSubmit","event","preventDefault","$name","$email","$subject","$message","validateInputOnSubmit","isLengthValid","value","isEmailValid","Object","fromEntries","FormData","entries","templateParams","name","subject","email","description","existingElements","Array","from","find","error","textContent","sendMessage","resetIcons","config","emailjs","send","then","response","status","showSuccessModal","reset","catch","showErrorModal","element","callback","messageCallback","inputControl","parentElement","errors","setErrorOnSubmit","length","message","setSuccessOnSubmit","errorIcon","successIcon","push","style","opacity","Swal","fire","position","icon","title","text","timer","color","confirmButtonColor","target","attributes","nodeValue","children","re","test","String","toLowerCase","icons","forEach"],"mappings":"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","file":"form.ebdab48b.js","sourceRoot":"../src","sourcesContent":["const $form = document.querySelector(\".form\");\nconst $submitFormButton = document.querySelector(\".js-submitButton\");\nconst errorMessage = document.getElementsByClassName(\"form__item-error-text\");\nconst listFields = document.getElementsByClassName(\".form__list\");\nconst formListInputs = document.querySelector(\".form__list\");\nconst successIcons = document.querySelectorAll(\".form__item-icon-success\");\n\ninit();\n\nfunction init() {\n  $form.addEventListener(\"submit\", onFormSubmit);\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const $name = document.querySelector(\".js-form__field-name\");\n  const $email = document.querySelector(\".js-form__field-email\");\n  const $subject = document.querySelector(\".js-form__field-subject\");\n  const $message = document.querySelector(\".js-form__field-message\");\n\n  validateInputOnSubmit(\n    $name,\n    () => isLengthValid($name.value),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $email,\n    () => isEmailValid($email.value),\n    \"email is invalid\"\n  );\n\n  validateInputOnSubmit(\n    $subject,\n    () => isLengthValid($subject.value),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $message,\n    () => isLengthValid($message.value),\n    \"minimum 3 characters required\"\n  );\n\n  // sendind message finally\n\n  const { name, subject, email, description } = Object.fromEntries(\n    new FormData($form).entries()\n  );\n\n  const templateParams = {\n    name,\n    subject,\n    email,\n    description,\n  };\n\n  const existingElements = document.querySelectorAll(\".form__item-error-text\");\n  const isAnyErrorMessage = !Array.from(existingElements).find(\n    (error) => error.textContent !== \"\"\n  );\n\n  if (isAnyErrorMessage) {\n    sendMessage(templateParams);\n    resetIcons(successIcons);\n  }\n}\n\nfunction sendMessage(config) {\n  emailjs\n    .send(process.env.SERVICE_ID, process.env.TEMPLATE_ID, config)\n    .then((response) => {\n      if (response.status === 200) {\n        showSuccessModal();\n        $form.reset();\n      }\n    })\n    .catch((error) => showErrorModal(error));\n}\n\nformListInputs.addEventListener(\"input\", (event) => {\n  if (event.target.attributes[1].nodeValue === \"email\") {\n    event.target.parentElement.children[3].style.opacity = `${\n      isEmailValid(event.target.value) ? 1 : 0\n    }`;\n  } else {\n    event.target.parentElement.children[3].style.opacity = `${\n      isLengthValid(event.target.value) ? 1 : 0\n    }`;\n  }\n});\n\nfunction validateInputOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  const errors = setErrorOnSubmit(element, callback, messageCallback) || [];\n\n  if (errors.length) {\n    errorMessage.textContent = errors.length ? errors[0].message : \"\";\n  }\n\n  if (!errors.length) {\n    setSuccessOnSubmit(element);\n  }\n}\n\nfunction setErrorOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const successIcon = inputControl.querySelector(\".form__item-icon-success\");\n\n  const errors = [];\n\n  if (!element.value) {\n    errors.push({ message: \"field is required\" });\n  }\n\n  if (!callback()) {\n    errors.push({ message: messageCallback });\n  }\n\n  successIcon.style.opacity = \"0\";\n  errorIcon.style.opacity = \"1\";\n\n  return errors;\n}\n\nfunction setSuccessOnSubmit(element) {\n  const inputControl = element.parentElement;\n  const errorMessage = inputControl.querySelector(\".form__item-error-text\");\n  const errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const successIcon = inputControl.querySelector(\".form__item-icon-success\");\n\n  errorMessage.textContent = \"\";\n  errorIcon.style.opacity = \"0\";\n  successIcon.style.opacity = \"1\";\n}\n\n// modals\n\nfunction showSuccessModal() {\n  Swal.fire({\n    position: \"center\",\n    icon: \"success\",\n    title: \"Your  message has been sent\",\n    text: \"I will respond soon ðŸ‘‹\",\n    timer: 3000,\n    color: \"#2c2323\",\n    confirmButtonColor: \"green\",\n  });\n}\n\nfunction showErrorModal(error) {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Email has not been sent ðŸ˜•\",\n    text: `${\n      error.text ? error.text : \"Something went wront, please send it again\"\n    }`,\n    confirmButtonColor: \"crimson\",\n  });\n}\n\n// validation\nconst isEmailValid = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(String(email).toLowerCase());\n};\n\nfunction isLengthValid(text) {\n  return text.length >= 3;\n}\n\nfunction resetIcons(icons) {\n  return Array.from(icons).forEach((icon) => (icon.style.opacity = \"0\"));\n}\n"]}