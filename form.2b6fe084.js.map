{"version":3,"sources":["js/form.js"],"names":["$form","document","querySelector","$submitFormButton","$errorMessage","getElementsByClassName","$listFields","$formListInputs","$successIcons","querySelectorAll","init","addEventListener","event","target","attributes","nodeValue","parentElement","children","style","opacity","isEmailValid","value","isLengthValid","onFormSubmit","preventDefault","$name","$email","$subject","$message","validateInputOnSubmit","Object","fromEntries","FormData","entries","templateParams","name","subject","email","description","$existingErrorsElements","Array","from","find","error","textContent","sendMessage","resetIcons","config","emailjs","send","then","response","status","showSuccessModal","reset","catch","showErrorModal","element","callback","messageCallback","inputControl","errors","setErrorOnSubmit","length","message","setSuccessOnSubmit","$errorIcon","$successIcon","push","Swal","fire","position","icon","title","text","timer","color","confirmButtonColor","re","test","String","toLowerCase","icons","forEach"],"mappings":"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","file":"form.2b6fe084.js","sourceRoot":"../src","sourcesContent":["const $form = document.querySelector(\".form\");\nconst $submitFormButton = document.querySelector(\".js-submitButton\");\nconst $errorMessage = document.getElementsByClassName(\"form__item-error-text\");\nconst $listFields = document.getElementsByClassName(\".form__list\");\nconst $formListInputs = document.querySelector(\".form__list\");\nconst $successIcons = document.querySelectorAll(\".form__item-icon-success\");\n\ninit();\n\nfunction init() {\n  $formListInputs.addEventListener(\"input\", (event) => {\n    if (event.target.attributes[1].nodeValue === \"email\") {\n      event.target.parentElement.children[3].style.opacity = `${\n        isEmailValid(event.target.value) ? 1 : 0\n      }`;\n    } else {\n      event.target.parentElement.children[3].style.opacity = `${\n        isLengthValid(event.target.value) ? 1 : 0\n      }`;\n    }\n  });\n\n  $form.addEventListener(\"submit\", onFormSubmit);\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const $name = document.querySelector(\".js-form__field-name\");\n  const $email = document.querySelector(\".js-form__field-email\");\n  const $subject = document.querySelector(\".js-form__field-subject\");\n  const $message = document.querySelector(\".js-form__field-message\");\n\n  validateInputOnSubmit(\n    $name,\n    () => isLengthValid($name.value),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $email,\n    () => isEmailValid($email.value),\n    \"email is invalid\"\n  );\n\n  validateInputOnSubmit(\n    $subject,\n    () => isLengthValid($subject.value),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $message,\n    () => isLengthValid($message.value),\n    \"minimum 3 characters required\"\n  );\n\n  // send message finally\n\n  const { name, subject, email, description } = Object.fromEntries(\n    new FormData($form).entries()\n  );\n\n  const templateParams = {\n    name,\n    subject,\n    email,\n    description,\n  };\n\n  const $existingErrorsElements = document.querySelectorAll(\n    \".form__item-error-text\"\n  );\n  const isAnyErrorMessage = !Array.from($existingErrorsElements).find(\n    (error) => error.textContent !== \"\"\n  );\n\n  if (isAnyErrorMessage) {\n    sendMessage(templateParams);\n    resetIcons($successIcons);\n  }\n}\n\nfunction sendMessage(config) {\n  emailjs\n    .send(process.env.SERVICE_ID, process.env.TEMPLATE_ID, config)\n    .then((response) => {\n      if (response.status === 200) {\n        showSuccessModal();\n        $form.reset();\n      }\n    })\n    .catch((error) => showErrorModal(error));\n}\n\nfunction validateInputOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const $errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  const errors = setErrorOnSubmit(element, callback, messageCallback) || [];\n\n  if (errors.length) {\n    $errorMessage.textContent = errors.length ? errors[0].message : \"\";\n  }\n\n  if (!errors.length) {\n    setSuccessOnSubmit(element);\n  }\n}\n\nfunction setErrorOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const $errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const $successIcon = inputControl.querySelector(\".form__item-icon-success\");\n\n  const errors = [];\n\n  if (!element.value) {\n    errors.push({ message: \"field is required\" });\n  }\n\n  if (!callback()) {\n    errors.push({ message: messageCallback });\n  }\n\n  $successIcon.style.opacity = \"0\";\n  $errorIcon.style.opacity = \"1\";\n\n  return errors;\n}\n\nfunction setSuccessOnSubmit(element) {\n  const inputControl = element.parentElement;\n  const $errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const $successIcon = inputControl.querySelector(\".form__item-icon-success\");\n\n  const $errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  $errorMessage.textContent = \"\";\n  $errorIcon.style.opacity = \"0\";\n  $successIcon.style.opacity = \"1\";\n}\n\n// modals\n\nfunction showSuccessModal() {\n  Swal.fire({\n    position: \"center\",\n    icon: \"success\",\n    title: \"Your  message has been sent\",\n    text: \"I will respond soon ðŸ‘‹\",\n    timer: 3000,\n    color: \"#2c2323\",\n    confirmButtonColor: \"green\",\n  });\n}\n\nfunction showErrorModal(error) {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Email has not been sent ðŸ˜•\",\n    text: `${\n      error.text ? error.text : \"Something went wront, please send it again\"\n    }`,\n    confirmButtonColor: \"crimson\",\n  });\n}\n\n// validation\nconst isEmailValid = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(String(email).toLowerCase());\n};\n\nfunction isLengthValid(text) {\n  return text.length >= 3;\n}\n\nfunction resetIcons(icons) {\n  return Array.from(icons).forEach((icon) => (icon.style.opacity = \"0\"));\n}\n"]}