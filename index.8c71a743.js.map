{"mappings":"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","sources":["src/js/form/DisplayFieldsErrors.js","src/js/form/FieldsValidationFormData.js","src/js/form/form.js","src/js/form/FieldsFormValidator.js"],"sourcesContent":["const $form = document.querySelector(\"[data-form]\");\nconst $errorsText = document.querySelectorAll(\"[data-error]\");\nconst $icons = document.querySelectorAll(\"[data-icon]\");\nconst HIDE_ICON = 0;\nconst SHOW_ICON = 1;\n\nexport class DisplayFieldsErrors {\n  static displayErrorsOnChange({ target }, errors) {\n    const targetCurrentName = target.attributes[\"name\"].value;\n    const currentErrorsArray = errors[targetCurrentName];\n    const error = currentErrorsArray.find(({ message }) => message);\n\n    const parentElement = target.parentElement;\n    const errorText = parentElement.querySelector(\"[data-error]\");\n    const targetIcon = parentElement.querySelector(\"[data-icon]\");\n\n    errorText.textContent = error?.message || \"\";\n\n    this.toggleIcon(error, targetIcon);\n  }\n\n  static displayErrorsOnSubmit(errors) {\n    Object.values(errors).forEach((arrayErrors, index) => {\n      const errorText = $errorsText[index];\n      const icon = $icons[index];\n      const foundError = arrayErrors.find(({ message }) => message);\n\n      errorText.textContent = foundError?.message || \"\";\n\n      this.toggleIcon(foundError, icon);\n    });\n\n    const isError = Object.values(errors)\n      .flat(Infinity)\n      .find(({ message }) => message);\n\n    if (!isError) {\n      this.showSuccessModal();\n      $form.reset();\n      this.resetIcons($icons);\n\n      /*\n          sendMessage(formData);\n          function call commented now because I do not want to use limited numbers of email.js requests\n        */\n    }\n  }\n\n  static toggleIcon(error, icon) {\n    const classesSuccessIcon = [\"fa-check\", \"form__item__icon-success\"];\n    const classesFailureIcon = [\n      \"fa-exclamation-circle\",\n      \"form__item__icon-failure\",\n    ];\n\n    if (error?.message) {\n      icon.classList.add(...classesFailureIcon);\n      icon.classList.remove(...classesSuccessIcon);\n    } else {\n      icon.classList.add(...classesSuccessIcon);\n      icon.classList.remove(...classesFailureIcon);\n    }\n\n    icon.style.opacity = SHOW_ICON;\n  }\n\n  static resetIcons(icons) {\n    return icons.forEach((icon) => (icon.style.opacity = HIDE_ICON));\n  }\n\n  static showSuccessModal() {\n    Swal.fire({\n      position: \"center\",\n      icon: \"success\",\n      title: \"Your  message has been sent\",\n      text: \"I will respond soon ðŸ‘‹\",\n      timer: 3000,\n      color: \"#2c2323\",\n      confirmButtonColor: \"green\",\n    });\n  }\n}\n","class ValidationMethods {\n  static isRequired(input, errorMessage) {\n    return input.length > 0 || { message: errorMessage };\n  }\n\n  static isLessThan(input, min, errorMessage) {\n    return input.length >= min || { message: errorMessage };\n  }\n\n  static isGreaterThan(input, max, errorMessage) {\n    return input.length <= max || { message: errorMessage };\n  }\n\n  static isNumber(input, errorMessage) {\n    const isNumberRegex = /\\d/;\n    return !isNumberRegex.test(input) || { message: errorMessage };\n  }\n\n  static isEmail(input, errorMessage) {\n    const regexEmailPattern =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return (\n      regexEmailPattern.test(String(input).toLowerCase()) || {\n        message: errorMessage,\n      }\n    );\n  }\n}\n\nexport class FieldsValidationFormData {\n  static getErrors(formData) {\n    const templateValidation = {\n      name(name) {\n        return [\n          ValidationMethods.isRequired(name, \"name is required\"),\n          ValidationMethods.isNumber(name, \"number is not required\"),\n          ValidationMethods.isLessThan(\n            name,\n            3,\n            \"must be at least 3 characters\"\n          ),\n          ValidationMethods.isGreaterThan(\n            name,\n            15,\n            \"must be maximum 15 characters\"\n          ),\n        ];\n      },\n      email(email) {\n        return [\n          ValidationMethods.isRequired(email, \"email is required\"),\n          ValidationMethods.isLessThan(\n            email,\n            3,\n            \"must be at least 3 characters\"\n          ),\n          ValidationMethods.isEmail(\n            email,\n            \"email is not valid - has to contains @ and .\"\n          ),\n        ];\n      },\n      subject(subject) {\n        return [\n          ValidationMethods.isRequired(subject, \"subject is required\"),\n          ValidationMethods.isLessThan(\n            subject,\n            3,\n            \"must be at least 3 characters\"\n          ),\n          ValidationMethods.isGreaterThan(\n            subject,\n            15,\n            \"must be maximum 15 characters\"\n          ),\n        ];\n      },\n      description(description) {\n        return [\n          ValidationMethods.isRequired(description, \"description is required\"),\n          ValidationMethods.isLessThan(\n            description,\n            3,\n            \"must be at least 3 characters\"\n          ),\n        ];\n      },\n    };\n\n    return [formData].reduce((acc, fieldsData) => {\n      for (const field in fieldsData) {\n        acc[field] = templateValidation[field](fieldsData[field]);\n      }\n\n      return acc;\n    }, {});\n  }\n}\n","import { FieldsFormValidator } from \"./FieldsFormValidator\";\n\nconst $form = document.querySelector(\"[data-form]\");\n\nnew FieldsFormValidator($form);\n\n// text area functionality\nfunction resizeTextArea({ target }) {\n  target.style.height = \"auto\";\n\n  const scrollHeight = target.scrollHeight;\n  target.style.height = `${scrollHeight}px`;\n}\n\nconst $textArea = document.querySelector(\"[data-area]\");\n$textArea.addEventListener(\"keyup\", resizeTextArea);\n","import { DisplayFieldsErrors } from \"./DisplayFieldsErrors\";\nimport { FieldsValidationFormData } from \"./FieldsValidationFormData\";\n\nexport class FieldsFormValidator {\n  constructor(form) {\n    this.form = form;\n\n    this.init();\n  }\n\n  init() {\n    this.addListenerOnChange();\n    this.addListenerOnSubmit();\n  }\n\n  addListenerOnChange() {\n    const handlerOnChange = (e) => {\n      const formData = this.getFormData(this.form);\n      const fieldData = this.createFieldDataObject(e, formData);\n\n      const errors = FieldsValidationFormData.getErrors(fieldData);\n\n      DisplayFieldsErrors.displayErrorsOnChange(e, errors);\n    };\n\n    this.form.addEventListener(\"keyup\", this.debounce(handlerOnChange, 400));\n  }\n\n  addListenerOnSubmit() {\n    const handlerOnSubmit = (e) => {\n      e.preventDefault();\n      const formData = this.getFormData(this.form);\n      const errors = FieldsValidationFormData.getErrors(formData);\n\n      DisplayFieldsErrors.displayErrorsOnSubmit(errors);\n    };\n\n    this.form.addEventListener(\"submit\", handlerOnSubmit);\n  }\n\n  getFormData(form) {\n    return Object.fromEntries(new FormData(form).entries());\n  }\n\n  createFieldDataObject({ target }, formData) {\n    const currentTarget = target.attributes[\"name\"].value;\n    const currentFieldValue = formData[currentTarget];\n\n    const fieldData = {};\n    fieldData[currentTarget] = currentFieldValue;\n\n    return fieldData;\n  }\n\n  debounce(fn, delay) {\n    let timeoutId;\n\n    return (...args) => {\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(() => fn(...args), delay);\n    };\n  }\n}\n"],"names":["$ac1138b74ee63b13$var$$form","document","querySelector","$ac1138b74ee63b13$var$$errorsText","querySelectorAll","$ac1138b74ee63b13$var$$icons","$ac1138b74ee63b13$export$1e59b88efc0a81e1","static","target","errors","error","attributes","value","find","message","parentElement","errorText","targetIcon","textContent","this","toggleIcon","Object","values","forEach","arrayErrors","index","icon","foundError","flat","Infinity","showSuccessModal","reset","resetIcons","classesSuccessIcon","classesFailureIcon","classList","add","remove","style","opacity","icons","Swal","fire","position","title","text","timer","color","confirmButtonColor","$05e1e4585c5a3338$var$ValidationMethods","input","errorMessage","length","min","max","test","String","toLowerCase","$05e1e4585c5a3338$export$110cb06133f62539","formData","templateValidation","name","isRequired","isNumber","isLessThan","isGreaterThan","email","isEmail","subject","description","reduce","acc","fieldsData","field","$8dc0323a8a1c072f$var$$form","constructor","form","init","addListenerOnChange","addListenerOnSubmit","addEventListener","debounce","e","getFormData","fieldData","createFieldDataObject","getErrors","displayErrorsOnChange","preventDefault","displayErrorsOnSubmit","fromEntries","FormData","entries","currentTarget","currentFieldValue","fn","delay","timeoutId","args","clearTimeout","setTimeout","height","scrollHeight"],"version":3,"file":"index.8c71a743.js.map"}