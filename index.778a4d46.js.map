{"mappings":"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","sources":["src/js/sendMessage.js","src/js/form.js"],"sourcesContent":["import emailjs from \"@emailjs/browser\";\n\nexport function sendMessage(configParams) {\n  const $form = document.querySelector(\".form\");\n  const { SERVICE_ID, TEMPLATE_ID, USER_ID } = process.env;\n\n  emailjs\n    .send(SERVICE_ID, TEMPLATE_ID, configParams, USER_ID)\n    .then((response) => {\n      if (response.status === 200) {\n        showSuccessModal();\n        $form.reset();\n      }\n    })\n    .catch((error) => showErrorModal(error));\n}\n\nexport function showSuccessModal() {\n  Swal.fire({\n    position: \"center\",\n    icon: \"success\",\n    title: \"Your  message has been sent\",\n    text: \"I will respond soon ðŸ‘‹\",\n    timer: 3000,\n    color: \"#2c2323\",\n    confirmButtonColor: \"green\",\n  });\n}\n\nexport function showErrorModal(error) {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Email has not been sent ðŸ˜•\",\n    text: `${\n      error.text ? error.text : \"Something went wront, please send it again\"\n    }`,\n    confirmButtonColor: \"crimson\",\n  });\n}\n","import { sendMessage, showErrorModal, showSuccessModal } from \"./sendMessage\";\n\nconst $form = document.querySelector(\".form\");\nconst $formListInputs = document.querySelector(\".form__list\");\nconst $successIcons = document.querySelectorAll(\".form__item-icon-success\");\n\nconst HIDE_ICON = 0;\nconst SHOW_ICON = 1;\n\ninit();\n\nfunction init() {\n  // all actions on input keyup change\n\n  $formListInputs.addEventListener(\"keyup\", ({ target }) => {\n    const actualInput = target.parentElement;\n\n    if (target.attributes[1].nodeValue === \"email\") {\n      target.parentElement.children[3].style.opacity = `${\n        isEmailValid(target.value) ? SHOW_ICON : HIDE_ICON\n      }`;\n\n      actualInput.querySelector(\".form__item-error-text\").textContent = \"\";\n      actualInput.querySelector(\".form__item-icon-failure\").style.opacity =\n        HIDE_ICON;\n    } else {\n      target.parentElement.children[3].style.opacity = `${\n        isLengthValid(target.value) ? SHOW_ICON : HIDE_ICON\n      }`;\n\n      actualInput.querySelector(\".form__item-error-text\").textContent = \"\";\n      actualInput.querySelector(\".form__item-icon-failure\").style.opacity =\n        HIDE_ICON;\n    }\n  });\n\n  // submit form\n  $form.addEventListener(\"submit\", onFormSubmit);\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const $name = document.querySelector(\".js-form__field-name\");\n  const $email = document.querySelector(\".js-form__field-email\");\n  const $subject = document.querySelector(\".js-form__field-subject\");\n  const $message = document.querySelector(\".js-form__field-message\");\n\n  const { name, email, subject, message } = Object.fromEntries(\n    new FormData($form).entries()\n  );\n\n  validateInputOnSubmit(\n    $name,\n    () => isLengthValid(name),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit($email, () => isEmailValid(email), \"email is invalid\");\n\n  validateInputOnSubmit(\n    $subject,\n    () => isLengthValid(subject),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $message,\n    () => isLengthValid(message),\n    \"minimum 3 characters required\"\n  );\n\n  // send message finally\n\n  const $existingErrorsElements = document.querySelectorAll(\n    \".form__item-error-text\"\n  );\n  const isAnyErrorMessage = !Array.from($existingErrorsElements).find(\n    (error) => error.textContent !== \"\"\n  );\n\n  if (isAnyErrorMessage) {\n    showSuccessModal();\n    $form.reset();\n\n    // at the moment email.js is during dev production so modals appers depends on errors\n\n    /*\n      sendMessage({\n        name,\n        subject,\n        email,\n        message,\n      });\n    */\n\n    resetIcons($successIcons);\n  } else {\n    showErrorModal();\n  }\n}\n\nfunction validateInputOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const $errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  const errors = setErrorOnSubmit(element, callback, messageCallback) || [];\n\n  if (errors.length) {\n    $errorMessage.textContent = errors.length ? errors[0].message : \"\";\n  }\n\n  if (!errors.length) {\n    setSuccessOnSubmit(element);\n  }\n}\n\nfunction setErrorOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const $errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const $successIcon = inputControl.querySelector(\".form__item-icon-success\");\n\n  const errors = [];\n\n  if (!element.value) {\n    errors.push({ message: \"field is required\" });\n  }\n\n  if (!callback()) {\n    errors.push({ message: messageCallback });\n  }\n\n  $successIcon.style.opacity = HIDE_ICON;\n  $errorIcon.style.opacity = SHOW_ICON;\n\n  return errors;\n}\n\nfunction setSuccessOnSubmit(element) {\n  const inputControl = element.parentElement;\n  const $errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const $successIcon = inputControl.querySelector(\".form__item-icon-success\");\n  const $errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  $errorMessage.textContent = \"\";\n  $errorIcon.style.opacity = HIDE_ICON;\n  $successIcon.style.opacity = SHOW_ICON;\n}\n\n// validation\nconst isEmailValid = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(String(email).toLowerCase());\n};\n\nfunction isLengthValid(text) {\n  return text.length >= 3;\n}\n\nfunction resetIcons(icons) {\n  return Array.from(icons).forEach((icon) => (icon.style.opacity = HIDE_ICON));\n}\n"],"names":["$2530301fdde9ea0b$export$8d3cb8e753cc1240","Swal","fire","position","icon","title","text","timer","color","confirmButtonColor","$2530301fdde9ea0b$export$eb122250488b74d5","error","$d2247bac48b6a171$var$$form","document","querySelector","$d2247bac48b6a171$var$$formListInputs","$d2247bac48b6a171$var$$successIcons","querySelectorAll","$d2247bac48b6a171$var$onFormSubmit","event","preventDefault","$name","$email","$subject","$message","name","email","subject","message","Object","fromEntries","FormData","entries","$d2247bac48b6a171$var$validateInputOnSubmit","$d2247bac48b6a171$var$isLengthValid","$d2247bac48b6a171$var$isEmailValid","$existingErrorsElements","icons","Array","from","find","textContent","reset","forEach","style","opacity","element","callback","messageCallback","$errorMessage","parentElement","errors","inputControl","$errorIcon","$successIcon","value","push","$d2247bac48b6a171$var$setErrorOnSubmit","length","$d2247bac48b6a171$var$setSuccessOnSubmit","addEventListener","target","actualInput","attributes","nodeValue","children","test","String","toLowerCase"],"version":3,"file":"index.778a4d46.js.map"}