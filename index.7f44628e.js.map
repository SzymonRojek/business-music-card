{"mappings":"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","sources":["src/js/form/fieldsValidationErrorsData.js","src/js/form/DisplayFieldsErrors.js","src/js/form/form.js","src/js/form/FieldsFormValidator.js"],"sourcesContent":["const validation = {\n  isLengthValid(input, errorMessage) {\n    return input.length > 0 || { message: errorMessage };\n  },\n  isMinLength(input, min, errorMessage) {\n    return input.length >= min || { message: errorMessage };\n  },\n  isOverMaxLength(input, max, errorMessage) {\n    return input.length <= max || { message: errorMessage };\n  },\n  isEmailValid(input, errorMessage) {\n    const regexPattern =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return (\n      regexPattern.test(String(input).toLowerCase()) || {\n        message: errorMessage,\n      }\n    );\n  },\n};\n\nexport const fieldsValidationErrorsData = {\n  getErrors({ name, email, subject, description }) {\n    return {\n      name: [\n        validation.isLengthValid(name, \"name is required\"),\n        validation.isMinLength(name, 3, \"must be at least 3 characters\"),\n        validation.isOverMaxLength(name, 15, \"must be maximum 15 characters\"),\n      ],\n      email: [\n        validation.isLengthValid(email, \"email is required\"),\n        validation.isMinLength(email, 3, \"must be at least 3 characters\"),\n        validation.isEmailValid(\n          email,\n          \"email is not valid - has to contains @ and .\"\n        ),\n      ],\n      subject: [\n        validation.isLengthValid(subject, \"subject is required\"),\n        validation.isMinLength(subject, 3, \"must be at least 3 characters\"),\n        validation.isOverMaxLength(\n          subject,\n          15,\n          \"must be maximum 15 characters\"\n        ),\n      ],\n      description: [\n        validation.isLengthValid(description, \"description is required\"),\n        validation.isMinLength(description, 3, \"must be at least 3 characters\"),\n      ],\n    };\n  },\n};\n","const $form = document.querySelector(\"[data-form]\");\nconst $errorsText = document.querySelectorAll(\"[data-error]\");\nconst $icons = document.querySelectorAll(\"[data-icon]\");\nconst HIDE_ICON = 0;\nconst SHOW_ICON = 1;\n\nexport class DisplayFieldsErrors {\n  constructor(errors) {\n    this.errors = errors;\n  }\n\n  displayErrorsOnChange(e) {\n    const targetCurrentName = e.target.attributes[\"name\"].value;\n    const currentErrorsArray = this.errors[targetCurrentName];\n    const error = currentErrorsArray.find((error) => error.message);\n\n    const parentElement = e.target.parentElement;\n    const errorText = parentElement.querySelector(\"[data-error]\");\n    const targetIcon = parentElement.querySelector(\"[data-icon]\");\n\n    errorText.textContent = error?.message || \"\";\n\n    this.toggleIcon(error, targetIcon);\n  }\n\n  displayErrorsOnSubmit() {\n    Object.values(this.errors).forEach((arrayErrors, index) => {\n      const errorText = $errorsText[index];\n      const icon = $icons[index];\n      const foundError = arrayErrors.find((el) => el.message);\n\n      errorText.textContent = foundError?.message || \"\";\n      this.toggleIcon(foundError, icon);\n    });\n\n    const isError = Object.values(this.errors)\n      .flat(Infinity)\n      .find((el) => el.message);\n\n    if (!isError) {\n      this.showSuccessModal();\n      $form.reset();\n      this.resetIcons($icons);\n\n      /*\n          sendMessage(formData);\n          function call commented now because I do not want to use limited numbers of email.js requests\n        */\n    }\n  }\n\n  toggleIcon(error, icon) {\n    const classesSuccessIcon = [\"fa-check\", \"form__item__icon-success\"];\n    const classesFailureIcon = [\n      \"fa-exclamation-circle\",\n      \"form__item__icon-failure\",\n    ];\n    if (error?.message) {\n      icon.classList.add(...classesFailureIcon);\n      icon.classList.remove(...classesSuccessIcon);\n    } else {\n      icon.classList.add(...classesSuccessIcon);\n      icon.classList.remove(...classesFailureIcon);\n    }\n\n    icon.style.opacity = SHOW_ICON;\n  }\n\n  resetIcons(icons) {\n    return icons.forEach((icon) => (icon.style.opacity = HIDE_ICON));\n  }\n\n  showSuccessModal() {\n    Swal.fire({\n      position: \"center\",\n      icon: \"success\",\n      title: \"Your  message has been sent\",\n      text: \"I will respond soon ðŸ‘‹\",\n      timer: 3000,\n      color: \"#2c2323\",\n      confirmButtonColor: \"green\",\n    });\n  }\n}\n","import { fieldsValidationErrorsData } from \"./fieldsValidationErrorsData\";\nimport { FieldsFormValidator } from \"./FieldsFormValidator\";\n\nconst $form = document.querySelector(\"[data-form]\");\n\nnew FieldsFormValidator($form, fieldsValidationErrorsData);\n\n// text area functionality\nfunction resizeTextArea({ target }) {\n  target.style.height = \"auto\";\n\n  const scrollHeight = target.scrollHeight;\n  target.style.height = `${scrollHeight}px`;\n}\n\nconst $textArea = document.querySelector(\"[data-area]\");\n$textArea.addEventListener(\"keyup\", resizeTextArea);\n","import { DisplayFieldsErrors } from \"./DisplayFieldsErrors\";\n\nexport class FieldsFormValidator {\n  constructor(form, validationData) {\n    this.form = form;\n    this.validationData = validationData;\n\n    this.init();\n  }\n\n  init() {\n    this.addListenerOnChange();\n    this.addListenerOnSubmit();\n  }\n\n  addListenerOnChange() {\n    this.form.addEventListener(\n      \"keyup\",\n      (e) => {\n        const formData = this.getFormData(this.form);\n        const errors = this.validationData.getErrors(formData);\n        const displayErrors = new DisplayFieldsErrors(errors);\n        displayErrors.displayErrorsOnChange(e, errors);\n      },\n      false\n    );\n  }\n\n  addListenerOnSubmit() {\n    this.form.addEventListener(\n      \"submit\",\n      (e) => {\n        e.preventDefault();\n        const formData = this.getFormData(this.form);\n        const errors = this.validationData.getErrors(formData);\n\n        const displayErrors = new DisplayFieldsErrors(errors);\n        displayErrors.displayErrorsOnSubmit(errors);\n      },\n      false\n    );\n  }\n\n  getFormData(form) {\n    return Object.fromEntries(new FormData(form).entries());\n  }\n}\n"],"names":["$e3685db016512b8f$var$validation","isLengthValid","input","errorMessage","length","message","isMinLength","min","isOverMaxLength","max","isEmailValid","test","String","toLowerCase","$e3685db016512b8f$export$22eceb2954cac028","getErrors","name","email","subject","description","$ac1138b74ee63b13$var$$form","document","querySelector","$ac1138b74ee63b13$var$$errorsText","querySelectorAll","$ac1138b74ee63b13$var$$icons","$ac1138b74ee63b13$export$1e59b88efc0a81e1","constructor","errors","this","displayErrorsOnChange","e","targetCurrentName","target","attributes","value","error1","find","error","parentElement","errorText","targetIcon","textContent","toggleIcon","displayErrorsOnSubmit","Object","values","forEach","arrayErrors","index","icon","foundError","el","flat","Infinity","showSuccessModal","reset","resetIcons","classesSuccessIcon","classesFailureIcon","classList","add","remove","style","opacity","icons","Swal","fire","position","title","text","timer","color","confirmButtonColor","$8dc0323a8a1c072f$var$$form","form","validationData","init","addListenerOnChange","addListenerOnSubmit","addEventListener","formData","getFormData","preventDefault","fromEntries","FormData","entries","height","scrollHeight"],"version":3,"file":"index.7f44628e.js.map"}