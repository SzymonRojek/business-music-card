{"mappings":"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","sources":["src/js/form/DisplayFieldsErrors.js","src/js/form/FieldsValidationFormData.js","src/js/form/form.js","src/js/form/FieldsFormValidator.js"],"sourcesContent":["const $form = document.querySelector(\"[data-form]\");\nconst $errorsText = document.querySelectorAll(\"[data-error]\");\nconst $icons = document.querySelectorAll(\"[data-icon]\");\nconst HIDE_ICON = 0;\nconst SHOW_ICON = 1;\n\nexport class DisplayFieldsErrors {\n  static displayErrorsOnChange(e, errors) {\n    const targetCurrentName = e.target.attributes[\"name\"].value;\n    const currentErrorsArray = errors[targetCurrentName];\n    const error = currentErrorsArray.find((error) => error.message);\n\n    const parentElement = e.target.parentElement;\n    const errorText = parentElement.querySelector(\"[data-error]\");\n    const targetIcon = parentElement.querySelector(\"[data-icon]\");\n\n    errorText.textContent = error?.message || \"\";\n\n    this.toggleIcon(error, targetIcon);\n  }\n\n  static displayErrorsOnSubmit(errors) {\n    Object.values(errors).forEach((arrayErrors, index) => {\n      const errorText = $errorsText[index];\n      const icon = $icons[index];\n      const foundError = arrayErrors.find((el) => el.message);\n\n      errorText.textContent = foundError?.message || \"\";\n\n      this.toggleIcon(foundError, icon);\n    });\n\n    const isError = Object.values(errors)\n      .flat(Infinity)\n      .find((el) => el.message);\n\n    if (!isError) {\n      this.showSuccessModal();\n      $form.reset();\n      this.resetIcons($icons);\n\n      /*\n          sendMessage(formData);\n          function call commented now because I do not want to use limited numbers of email.js requests\n        */\n    }\n  }\n\n  static toggleIcon(error, icon) {\n    const classesSuccessIcon = [\"fa-check\", \"form__item__icon-success\"];\n    const classesFailureIcon = [\n      \"fa-exclamation-circle\",\n      \"form__item__icon-failure\",\n    ];\n\n    if (error?.message) {\n      icon.classList.add(...classesFailureIcon);\n      icon.classList.remove(...classesSuccessIcon);\n    } else {\n      icon.classList.add(...classesSuccessIcon);\n      icon.classList.remove(...classesFailureIcon);\n    }\n\n    icon.style.opacity = SHOW_ICON;\n  }\n\n  static resetIcons(icons) {\n    return icons.forEach((icon) => (icon.style.opacity = HIDE_ICON));\n  }\n\n  static showSuccessModal() {\n    Swal.fire({\n      position: \"center\",\n      icon: \"success\",\n      title: \"Your  message has been sent\",\n      text: \"I will respond soon ðŸ‘‹\",\n      timer: 3000,\n      color: \"#2c2323\",\n      confirmButtonColor: \"green\",\n    });\n  }\n}\n","class ValidationMethods {\n  static isRequired(input, errorMessage) {\n    return input.length > 0 || { message: errorMessage };\n  }\n\n  static isLessThan(input, min, errorMessage) {\n    return input.length >= min || { message: errorMessage };\n  }\n\n  static isGreaterThan(input, max, errorMessage) {\n    return input.length <= max || { message: errorMessage };\n  }\n\n  static isNumber(input, errorMessage) {\n    const isNumberRegex = /\\d/;\n    return !isNumberRegex.test(input) || { message: errorMessage };\n  }\n\n  static isEmail(input, errorMessage) {\n    const regexEmailPattern =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return (\n      regexEmailPattern.test(String(input).toLowerCase()) || {\n        message: errorMessage,\n      }\n    );\n  }\n}\n\nexport class FieldsValidationFormData {\n  static getErrors(formData) {\n    const templateValidation = {\n      name(name) {\n        return [\n          ValidationMethods.isRequired(name, \"name is required\"),\n          ValidationMethods.isNumber(name, \"number is not required\"),\n          ValidationMethods.isLessThan(\n            name,\n            3,\n            \"must be at least 3 characters\"\n          ),\n          ValidationMethods.isGreaterThan(\n            name,\n            15,\n            \"must be maximum 15 characters\"\n          ),\n        ];\n      },\n      email(email) {\n        return [\n          ValidationMethods.isRequired(email, \"email is required\"),\n          ValidationMethods.isLessThan(\n            email,\n            3,\n            \"must be at least 3 characters\"\n          ),\n          ValidationMethods.isEmail(\n            email,\n            \"email is not valid - has to contains @ and .\"\n          ),\n        ];\n      },\n      subject(subject) {\n        return [\n          ValidationMethods.isRequired(subject, \"subject is required\"),\n          ValidationMethods.isLessThan(\n            subject,\n            3,\n            \"must be at least 3 characters\"\n          ),\n          ValidationMethods.isGreaterThan(\n            subject,\n            15,\n            \"must be maximum 15 characters\"\n          ),\n        ];\n      },\n      description(description) {\n        return [\n          ValidationMethods.isRequired(description, \"description is required\"),\n          ValidationMethods.isLessThan(\n            description,\n            3,\n            \"must be at least 3 characters\"\n          ),\n        ];\n      },\n    };\n\n    return [formData].reduce((acc, fieldsData) => {\n      for (const field in fieldsData) {\n        acc[field] = templateValidation[field](fieldsData[field]);\n      }\n\n      return acc;\n    }, {});\n  }\n}\n","import { FieldsFormValidator } from \"./FieldsFormValidator\";\n\nconst $form = document.querySelector(\"[data-form]\");\n\nnew FieldsFormValidator($form);\n\n// text area functionality\nfunction resizeTextArea({ target }) {\n  target.style.height = \"auto\";\n\n  const scrollHeight = target.scrollHeight;\n  target.style.height = `${scrollHeight}px`;\n}\n\nconst $textArea = document.querySelector(\"[data-area]\");\n$textArea.addEventListener(\"keyup\", resizeTextArea);\n","import { DisplayFieldsErrors } from \"./DisplayFieldsErrors\";\nimport { FieldsValidationFormData } from \"./FieldsValidationFormData\";\n\nexport class FieldsFormValidator {\n  constructor(form) {\n    this.form = form;\n\n    this.init();\n  }\n\n  init() {\n    this.addListenerOnChange();\n    this.addListenerOnSubmit();\n  }\n\n  addListenerOnChange() {\n    this.form.addEventListener(\n      \"keyup\",\n      (e) => {\n        const formData = this.getFormData(this.form);\n        const fieldData = this.createFieldDataObject(e, formData);\n\n        const errors = FieldsValidationFormData.getErrors(fieldData);\n\n        DisplayFieldsErrors.displayErrorsOnChange(e, errors);\n      },\n      false\n    );\n  }\n\n  addListenerOnSubmit() {\n    this.form.addEventListener(\n      \"submit\",\n      (e) => {\n        e.preventDefault();\n        const formData = this.getFormData(this.form);\n        const errors = FieldsValidationFormData.getErrors(formData);\n\n        DisplayFieldsErrors.displayErrorsOnSubmit(errors);\n      },\n      false\n    );\n  }\n\n  getFormData(form) {\n    return Object.fromEntries(new FormData(form).entries());\n  }\n\n  createFieldDataObject(e, formData) {\n    const currentTarget = e.target.attributes[\"name\"].value;\n    const currentFieldValue = formData[currentTarget];\n\n    const fieldData = {};\n    fieldData[currentTarget] = currentFieldValue;\n\n    return fieldData;\n  }\n}\n"],"names":["$ac1138b74ee63b13$var$$form","document","querySelector","$ac1138b74ee63b13$var$$errorsText","querySelectorAll","$ac1138b74ee63b13$var$$icons","$ac1138b74ee63b13$export$1e59b88efc0a81e1","static","e","errors","error1","target","attributes","value","find","error","message","parentElement","errorText","targetIcon","textContent","this","toggleIcon","Object","values","forEach","arrayErrors","index","icon","foundError","el","flat","Infinity","showSuccessModal","reset","resetIcons","classesSuccessIcon","classesFailureIcon","classList","add","remove","style","opacity","icons","Swal","fire","position","title","text","timer","color","confirmButtonColor","$05e1e4585c5a3338$var$ValidationMethods","input","errorMessage","length","min","max","test","String","toLowerCase","$05e1e4585c5a3338$export$110cb06133f62539","formData","templateValidation","name","isRequired","isNumber","isLessThan","isGreaterThan","email","isEmail","subject","description","reduce","acc","fieldsData","field","$8dc0323a8a1c072f$var$$form","constructor","form","init","addListenerOnChange","addListenerOnSubmit","addEventListener","getFormData","fieldData","createFieldDataObject","getErrors","displayErrorsOnChange","preventDefault","displayErrorsOnSubmit","fromEntries","FormData","entries","currentTarget","currentFieldValue","height","scrollHeight"],"version":3,"file":"index.17a74ec5.js.map"}