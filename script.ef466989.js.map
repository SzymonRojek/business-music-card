{"version":3,"sources":["js/script.js"],"names":["navigationHamburgerButton","document","querySelector","navigationArrowButton","navigationList","navigationLinks","querySelectorAll","arrowRight","arrowLeft","fadeLinks","forEach","link","window","innerWidth","classList","contains","add","remove","resetStates","addEventListener","toggle","setAttribute","innerText","pageYOffset","modeSwitcher","body","prefersDarkScheme","matchMedia","currentTheme","localStorage","getItem","prefersDarkMode","matches"],"mappings":";AAIE,aAEA,IAAMA,EAA4BC,SAASC,cAAe,gCACpDC,EAAwBF,SAASC,cAAe,iCAChDE,EAAiBH,SAASC,cAAe,oBACzCG,EAAkBJ,SAASK,iBAAkB,qBAC7CC,EAAa,IACbC,EAAY,IAGlB,SAASC,IACPJ,EAAgBK,QAAS,SAAAC,GAClBC,OAAOC,YAAc,MAAQF,EAAKG,UAAUC,SAAU,aACzDJ,EAAKG,UAAUE,IAAK,aAEpBL,EAAKG,UAAUG,OAAQ,eAkC7B,SAASC,IACPb,EAAgBK,QAAQ,SAAAC,GACtBA,EAAKQ,iBAAiB,QAAS,WAC7Bf,EAAeU,UAAUG,OAAQ,0BACjCjB,EAA0Bc,UAAUG,OAAQ,aAC5CR,QAlCNT,EAA0BmB,iBAAiB,QAAS,WAClDnB,EAA0Bc,UAAUM,OAAQ,aAC5ChB,EAAeU,UAAUM,OAAQ,0BACjCX,IAEKL,EAAeU,UAAUC,SAAU,0BACtCf,EAA0BqB,aAAc,iBAAiB,GAEzDrB,EAA0BqB,aAAc,iBAAiB,KAI7DlB,EAAsBgB,iBAAiB,QAAS,WAC9Cf,EAAeU,UAAUM,OAAQ,0BAE5BpB,EAA0Bc,UAAUC,SAAS,cAChDf,EAA0Bc,UAAUG,OAAO,aAGxCb,EAAeU,UAAUC,SAAU,0BACtCZ,EAAsBkB,aAAc,iBAAiB,GAErDlB,EAAsBkB,aAAc,iBAAiB,GAGvDZ,IACAN,EAAsBmB,UAAYnB,EAAsBmB,YAAcf,EAAaC,EAAYD,IAYjGW,IAEAN,OAAOO,iBAAiB,SAAU,WAC3BP,OAAOW,YAAc,IACxBpB,EAAsBW,UAAUE,IAAK,wCAErCb,EAAsBW,UAAUG,OAAQ,0CAO5C,IAAMO,EAAevB,SAASC,cAAe,kBACvCuB,EAAOxB,SAASC,cAAe,QAASY,UA8B1CY,EAAoBd,OAAOe,WAAW,gCACtCC,EAAeC,aAAaC,QAAQ,SAGnCC,EAAkBnB,OAAOe,WAAY,gCAAiCK,QAO1ED,EACDN,EAAKT,IAAI,QAETS,EAAKT,IAAI","file":"script.ef466989.js","sourceRoot":"../src","sourcesContent":["\n\n// (() => {\n\n  \"use strict\";\n  \n  const navigationHamburgerButton = document.querySelector( '.navigation__hamburgerButton' );\n  const navigationArrowButton = document.querySelector( '.navigation__list-arrowButton' );\n  const navigationList = document.querySelector( 'navigation__list' );\n  const navigationLinks = document.querySelectorAll( '.navigation__link' );\n  const arrowRight = '>';\n  const arrowLeft = '<';\n\n\n  function fadeLinks() {\n    navigationLinks.forEach( link => {\n      if ( window.innerWidth <= 767 && !link.classList.contains( 'linksFade' ) ) {\n        link.classList.add( 'linksFade' );\n      } else {\n        link.classList.remove( 'linksFade' );\n      }\n    })\n  }\n\n  navigationHamburgerButton.addEventListener('click', () => {\n    navigationHamburgerButton.classList.toggle( 'js-active' );\n    navigationList.classList.toggle( 'navigation__list--open' );\n    fadeLinks();\n\n    if ( navigationList.classList.contains( 'navigation__list--open' ) ) {\n      navigationHamburgerButton.setAttribute( 'aria-expanded', true);\n    } else {\n      navigationHamburgerButton.setAttribute( 'aria-expanded', false);\n    }\n  })\n\n  navigationArrowButton.addEventListener(\"click\", () => {\n    navigationList.classList.toggle( 'navigation__list--open' );\n\n    if ( navigationHamburgerButton.classList.contains('js-active') ) {\n      navigationHamburgerButton.classList.remove('js-active');\n    }\n\n    if ( navigationList.classList.contains( 'navigation__list--open' )) {\n      navigationArrowButton.setAttribute( 'aria-expanded', true );\n    } else {\n      navigationArrowButton.setAttribute( 'aria-expanded', false );\n    }\n\n    fadeLinks();\n    navigationArrowButton.innerText = navigationArrowButton.innerText === arrowRight ? arrowLeft : arrowRight;\n  })\n\n  function resetStates() {\n    navigationLinks.forEach(link => {\n      link.addEventListener('click', () => {\n        navigationList.classList.remove( 'navigation__list--open' );\n        navigationHamburgerButton.classList.remove( 'js-active' );\n        fadeLinks();\n      })\n    })\n  }\n  resetStates();\n \n  window.addEventListener('scroll', () => {\n    if ( window.pageYOffset > 200 ) {\n      navigationArrowButton.classList.add( 'navigation__list-arrowButton--active' );\n    } else {\n      navigationArrowButton.classList.remove( 'navigation__list-arrowButton--active' );\n    } \n  })\n\n\n\n // mode switcher functionality:\n  const modeSwitcher = document.querySelector( '#mode-switcher' );\n  const body = document.querySelector( 'body' ).classList;\n \n  // check user preferences scheme color and set to dark or light\n  // const prefersDarkMode = window.matchMedia( '(prefers-color-scheme: dark)' ).matches;\n  // prefersDarkMode ? body.add( 'dark' ) : body.remove( 'dark' );\n\n// if(prefersDarkMode ) {\n//   body.add('dark')\n// } else {\n//   body.add('light')\n// }\n\n\n\n\n//     if ( body.contains( 'dark' ) ) {\n//       modeSwitcher.checked = true;\n//       modeSwitcher.classList.add( 'checkbox--active' );\n//     }\n\n//  modeSwitcher.addEventListener('click', () => {\n//   const boolean = document.querySelector( '#mode-switcher:checked' ) !== null;\n//   boolean ? body.add( 'dark' ) : body.remove( 'dark' );\n//   modeSwitcher.classList.add( 'checkbox--active' );\n//  })\n\n\n\n// Select the button\n\nconst prefersDarkScheme = window.matchMedia(\"(prefers-color-scheme: dark)\");\nconst currentTheme = localStorage.getItem(\"theme\");\n\n\n const prefersDarkMode = window.matchMedia( '(prefers-color-scheme: dark)' ).matches;\n  // if (currentTheme === \"dark\") {\n  //   body.add(\"dark\");\n  // } else if (currentTheme === \"light\") {\n  //   body.add(\"light\");\n  // }\n\nif(prefersDarkMode ) {\n  body.add('dark')\n} else {\n  body.add('light')\n}\n\n\n// modeSwitcher.addEventListener(\"click\", () => {\n//   if (prefersDarkScheme.matches) {\n\n//     body.toggle(\"light\");\n \n//     const theme = body.contains(\"light\") ? \"light\" : \"dark\";\n//   } else {\n   \n//     body.toggle(\"dark\");\n//     const theme = body.contains(\"dark\") ? \"dark\" : \"light\";\n//   }\n  \n//   localStorage.setItem(\"theme\", theme);\n// });\n\n\n\n\n\n// })();"]}