{"version":3,"sources":["js/script.js"],"names":["navigationHamburgerButton","document","querySelector","navigationArrowButton","navigationList","navigationLinks","querySelectorAll","fadeLinks","forEach","link","window","innerWidth","classList","contains","add","remove","addEventListener","toggle","setAttribute","innerText","pageYOffset","body","modeSwitcher","userPrefersDarkMode","matchMedia","matches","console","log","checked"],"mappings":";CAAA,WAEE,aAEMA,IAAAA,EAA4BC,SAASC,cAAc,gCACnDC,EAAwBF,SAASC,cAAc,iCAC/CE,EAAiBH,SAASC,cAAc,qBACxCG,EAAkBJ,SAASK,iBAAiB,qBAIzCC,SAAAA,IACPF,EAAgBG,QAAS,SAAAC,GAClBC,OAAOC,YAAc,MAAQF,EAAKG,UAAUC,SAAS,aACxDJ,EAAKG,UAAUE,IAAI,aAEnBL,EAAKG,UAAUG,OAAO,eAK5Bf,EAA0BgB,iBAAkB,QAAS,WACnDhB,EAA0BY,UAAUK,OAAO,aAC3Cb,EAAeQ,UAAUK,OAAO,0BAChCV,IAEKH,EAAeQ,UAAUC,SAAS,0BACrCb,EAA0BkB,aAAa,iBAAiB,GAExDlB,EAA0BkB,aAAa,iBAAiB,KAI5Df,EAAsBa,iBAAkB,QAAS,WAC/CZ,EAAeQ,UAAUK,OAAO,0BAE3BjB,EAA0BY,UAAUC,SAAS,cAChDb,EAA0BY,UAAUG,OAAO,aAGxCX,EAAeQ,UAAUC,SAAS,2BACrCb,EAA0BY,UAAUE,IAAI,aACxCX,EAAsBe,aAAa,iBAAiB,IAEpDf,EAAsBe,aAAa,iBAAiB,GAGtDX,IAEAJ,EAAsBgB,UAzCL,MAyCiBhB,EAAsBgB,UAxCxC,IADC,MA6CjBd,EAAgBG,QAAS,SAAAC,GACvBA,EAAKO,iBAAkB,QAAS,WAC9BZ,EAAeQ,UAAUG,OAAO,0BAChCf,EAA0BY,UAAUG,OAAO,aAC3CR,QAMNG,OAAOM,iBAAkB,SAAU,WAC5BN,OAAOU,YAAc,IACxBjB,EAAsBS,UAAUE,IAAI,wCAEpCX,EAAsBS,UAAUG,OAAO,0CAKrCM,IAAAA,EAAOpB,SAASC,cAAc,QAAQU,UACtCU,EAAerB,SAASC,cAAc,kBAGtCqB,EAAsBb,OAAOc,WAAY,gCAAiCC,QAC9EC,QAAQC,IAAoBJ,gBAAAA,OAAAA,EAAqB,QAAU,SAA3D,MAEFA,EAAsBF,EAAKP,IAAI,QAAUO,EAAKN,OAAO,QAEhDM,EAAKR,SAAS,UACjBS,EAAaM,SAAU,EACvBN,EAAaV,UAAUE,IAAI,qBAG9BQ,EAAaN,iBAAkB,QAAS,WAC8B,OAArDf,SAASC,cAAc,0BAC3BmB,EAAKP,IAAI,QAAUO,EAAKN,OAAO,QACzCO,EAAaV,UAAUE,IAAI,sBAzF/B","file":"script.e4804671.js","sourceRoot":"../src","sourcesContent":["(() => {\n\n  'use strict';\n  \n  const navigationHamburgerButton = document.querySelector('.navigation__hamburgerButton');\n  const navigationArrowButton = document.querySelector('.navigation__list-arrowButton');\n  const navigationList = document.querySelector('.navigation__list');\n  const navigationLinks = document.querySelectorAll('.navigation__link');\n  const arrowRight = '>';\n  const arrowLeft = '<';\n\n  function fadeLinks() {\n    navigationLinks.forEach( link => {\n      if ( window.innerWidth <= 767 && !link.classList.contains('linksFade') ) {\n        link.classList.add('linksFade');\n      } else {\n        link.classList.remove('linksFade');\n      }\n    })\n  }\n\n  navigationHamburgerButton.addEventListener( 'click', () => {\n    navigationHamburgerButton.classList.toggle('js-active');\n    navigationList.classList.toggle('navigation__list--open');\n    fadeLinks();\n\n    if ( navigationList.classList.contains('navigation__list--open') ) {\n      navigationHamburgerButton.setAttribute('aria-expanded', true);\n    } else {\n      navigationHamburgerButton.setAttribute('aria-expanded', false);\n    }\n  })\n\n  navigationArrowButton.addEventListener( 'click', () => {\n    navigationList.classList.toggle('navigation__list--open');\n\n    if ( navigationHamburgerButton.classList.contains('js-active') ) {\n      navigationHamburgerButton.classList.remove('js-active');\n    }\n\n    if ( navigationList.classList.contains('navigation__list--open') ) {\n      navigationHamburgerButton.classList.add('js-active');\n      navigationArrowButton.setAttribute('aria-expanded', true)\n    } else {\n      navigationArrowButton.setAttribute('aria-expanded', false);\n    }\n\n    fadeLinks();\n\n    navigationArrowButton.innerText = navigationArrowButton.innerText === arrowRight ? arrowLeft : arrowRight;\n  })\n\n  function resetStates() {\n    navigationLinks.forEach( link => {\n      link.addEventListener( 'click', () => {\n        navigationList.classList.remove('navigation__list--open');\n        navigationHamburgerButton.classList.remove('js-active');\n        fadeLinks();\n      })\n    })\n  }\n  resetStates();\n \n  window.addEventListener( 'scroll', () => {\n    if ( window.pageYOffset > 200 ) {\n      navigationArrowButton.classList.add('navigation__list-arrowButton--active');\n    } else {\n      navigationArrowButton.classList.remove('navigation__list-arrowButton--active');\n    } \n  })\n\n // mode switcher functionality:\n  const body = document.querySelector('body').classList;\n  const modeSwitcher = document.querySelector('#mode-switcher');\n \n  // check user preferences scheme color and set to dark or light\n  const userPrefersDarkMode = window.matchMedia( '(prefers-color-scheme: dark)' ).matches;\n    console.log(`Dark mode is ${userPrefersDarkMode? '🌒 on' : '☀️ off'}.`);\n\n  userPrefersDarkMode ? body.add('dark') : body.remove('dark');\n\n  if ( body.contains('dark') ) {\n    modeSwitcher.checked = true;\n    modeSwitcher.classList.add('checkbox--active');\n  }\n\n modeSwitcher.addEventListener( 'click', () => {\n  const boolean = document.querySelector('#mode-switcher:checked') !== null;\n    boolean ? body.add('dark') : body.remove('dark');\n    modeSwitcher.classList.add('checkbox--active');\n })\n\n})();\n\n// todo: => adding local or session storage\n\n"]}