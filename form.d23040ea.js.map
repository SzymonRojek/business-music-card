{"version":3,"sources":["js/form.js"],"names":["$form","document","querySelector","$submitFormButton","$errorMessage","getElementsByClassName","$listFields","$formListInputs","$successIcons","querySelectorAll","HIDE_ICON","SHOW_ICON","init","addEventListener","target","actualInput","parentElement","attributes","nodeValue","children","style","opacity","isEmailValid","value","textContent","isLengthValid","onFormSubmit","event","preventDefault","$name","$email","$subject","$message","validateInputOnSubmit","Object","fromEntries","FormData","entries","templateParams","name","subject","email","description","$existingErrorsElements","Array","from","find","error","sendMessage","resetIcons","config","emailjs","send","then","response","status","showSuccessModal","reset","catch","showErrorModal","element","callback","messageCallback","inputControl","errors","setErrorOnSubmit","length","message","setSuccessOnSubmit","$errorIcon","$successIcon","push","Swal","fire","position","icon","title","text","timer","color","confirmButtonColor","re","test","String","toLowerCase","icons","forEach"],"mappings":"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","file":"form.d23040ea.js","sourceRoot":"../src","sourcesContent":["const $form = document.querySelector(\".form\");\nconst $submitFormButton = document.querySelector(\".js-submitButton\");\nconst $errorMessage = document.getElementsByClassName(\"form__item-error-text\");\nconst $listFields = document.getElementsByClassName(\".form__list\");\nconst $formListInputs = document.querySelector(\".form__list\");\nconst $successIcons = document.querySelectorAll(\".form__item-icon-success\");\n\nconst HIDE_ICON = 0;\nconst SHOW_ICON = 1;\n\ninit();\n\nfunction init() {\n  // all actions on input keyup change\n\n  $formListInputs.addEventListener(\"keyup\", ({ target }) => {\n    const actualInput = target.parentElement;\n\n    if (target.attributes[1].nodeValue === \"email\") {\n      target.parentElement.children[3].style.opacity = `${\n        isEmailValid(target.value) ? SHOW_ICON : HIDE_ICON\n      }`;\n\n      actualInput.querySelector(\".form__item-error-text\").textContent = \"\";\n      actualInput.querySelector(\".form__item-icon-failure\").style.opacity =\n        HIDE_ICON;\n    } else {\n      target.parentElement.children[3].style.opacity = `${\n        isLengthValid(target.value) ? SHOW_ICON : HIDE_ICON\n      }`;\n\n      actualInput.querySelector(\".form__item-error-text\").textContent = \"\";\n      actualInput.querySelector(\".form__item-icon-failure\").style.opacity =\n        HIDE_ICON;\n    }\n  });\n\n  // submit form\n  $form.addEventListener(\"submit\", onFormSubmit);\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const $name = document.querySelector(\".js-form__field-name\");\n  const $email = document.querySelector(\".js-form__field-email\");\n  const $subject = document.querySelector(\".js-form__field-subject\");\n  const $message = document.querySelector(\".js-form__field-message\");\n\n  validateInputOnSubmit(\n    $name,\n    () => isLengthValid($name.value),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $email,\n    () => isEmailValid($email.value),\n    \"email is invalid\"\n  );\n\n  validateInputOnSubmit(\n    $subject,\n    () => isLengthValid($subject.value),\n    \"minimum 3 characters required\"\n  );\n\n  validateInputOnSubmit(\n    $message,\n    () => isLengthValid($message.value),\n    \"minimum 3 characters required\"\n  );\n\n  // send message finally\n\n  const { name, subject, email, description } = Object.fromEntries(\n    new FormData($form).entries()\n  );\n\n  const templateParams = {\n    name,\n    subject,\n    email,\n    description,\n  };\n\n  const $existingErrorsElements = document.querySelectorAll(\n    \".form__item-error-text\"\n  );\n  const isAnyErrorMessage = !Array.from($existingErrorsElements).find(\n    (error) => error.textContent !== \"\"\n  );\n\n  if (isAnyErrorMessage) {\n    sendMessage(templateParams);\n    resetIcons($successIcons);\n  }\n}\n\nfunction sendMessage(config) {\n  emailjs\n    .send(process.env.SERVICE_ID, process.env.TEMPLATE_ID, config)\n    .then((response) => {\n      if (response.status === 200) {\n        showSuccessModal();\n        $form.reset();\n      }\n    })\n    .catch((error) => showErrorModal(error));\n}\n\nfunction validateInputOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const $errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  const errors = setErrorOnSubmit(element, callback, messageCallback) || [];\n\n  if (errors.length) {\n    $errorMessage.textContent = errors.length ? errors[0].message : \"\";\n  }\n\n  if (!errors.length) {\n    setSuccessOnSubmit(element);\n  }\n}\n\nfunction setErrorOnSubmit(element, callback, messageCallback) {\n  const inputControl = element.parentElement;\n  const $errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const $successIcon = inputControl.querySelector(\".form__item-icon-success\");\n\n  const errors = [];\n\n  if (!element.value) {\n    errors.push({ message: \"field is required\" });\n  }\n\n  if (!callback()) {\n    errors.push({ message: messageCallback });\n  }\n\n  $successIcon.style.opacity = HIDE_ICON;\n  $errorIcon.style.opacity = SHOW_ICON;\n\n  return errors;\n}\n\nfunction setSuccessOnSubmit(element) {\n  const inputControl = element.parentElement;\n  const $errorIcon = inputControl.querySelector(\".form__item-icon-failure\");\n  const $successIcon = inputControl.querySelector(\".form__item-icon-success\");\n  const $errorMessage = inputControl.querySelector(\".form__item-error-text\");\n\n  $errorMessage.textContent = \"\";\n  $errorIcon.style.opacity = HIDE_ICON;\n  $successIcon.style.opacity = SHOW_ICON;\n}\n\n// modals\n\nfunction showSuccessModal() {\n  Swal.fire({\n    position: \"center\",\n    icon: \"success\",\n    title: \"Your  message has been sent\",\n    text: \"I will respond soon ðŸ‘‹\",\n    timer: 3000,\n    color: \"#2c2323\",\n    confirmButtonColor: \"green\",\n  });\n}\n\nfunction showErrorModal(error) {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Email has not been sent ðŸ˜•\",\n    text: `${\n      error.text ? error.text : \"Something went wront, please send it again\"\n    }`,\n    confirmButtonColor: \"crimson\",\n  });\n}\n\n// validation\nconst isEmailValid = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return re.test(String(email).toLowerCase());\n};\n\nfunction isLengthValid(text) {\n  return text.length >= 3;\n}\n\nfunction resetIcons(icons) {\n  return Array.from(icons).forEach((icon) => (icon.style.opacity = HIDE_ICON));\n}\n"]}