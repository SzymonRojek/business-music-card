{"mappings":"AAAA,MAAMA,OAASC,SAASC,cAAc,OAChCC,WAAaF,SAASC,cAAc,mBACpCE,QAAUH,SAASC,cACvB,0CAGIG,kBAAoB,CACxBC,WAAY,qBAGRC,mBAAqB,IAAIC,sBAAqB,SAClDC,EACAF,GAEAE,EAAQC,SAASC,IACVA,EAAMC,eAGTZ,OAAOa,UAAUC,OAAO,mBAFxBd,OAAOa,UAAUE,IAAI,wBAM3BV,mBAEAE,mBAAmBS,QAAQb,YAE3B,MAAMc,sBAAwB,IAAIT,sBAAqB,SACrDC,EACAF,GAEAE,EAAQC,SAASC,IACf,GAAKA,EAAMC,eAUTR,QAAQS,UAAUC,OAAO,qBAVA,CACzB,MAAMI,EAAIC,iBAAiB,kBAAmB,oBAE9CC,QAAQC,IAAIH,GAEF,uBAANA,GACFd,QAAQS,UAAUE,IAAI,uBAQ9BV,mBAYA,SAASc,iBAAiBG,EAAUC,GAClC,MAAMC,EAAUvB,SAASC,cAAcoB,GAGvC,OAFmBG,OAAOC,iBAAiBF,GAEzBL,iBAAiBI,GAdrCN,sBAAsBD,QAAQb","sources":["src/js/observer.js"],"sourcesContent":["const header = document.querySelector(\"nav\");\nconst sectionOne = document.querySelector(\".hero-container\");\nconst heading = document.querySelector(\n  \".navigation__container-content-heading\"\n);\n\nconst sectionOneOptions = {\n  rootMargin: \"-80px 0px 0px 0px\",\n};\n\nconst sectionOneObserver = new IntersectionObserver(function (\n  entries,\n  sectionOneObserver\n) {\n  entries.forEach((entry) => {\n    if (!entry.isIntersecting) {\n      header.classList.add(\"header-scrolled\");\n    } else {\n      header.classList.remove(\"header-scrolled\");\n    }\n  });\n},\nsectionOneOptions);\n\nsectionOneObserver.observe(sectionOne);\n\nconst sectionOneObserverOne = new IntersectionObserver(function (\n  entries,\n  sectionOneObserver\n) {\n  entries.forEach((entry) => {\n    if (!entry.isIntersecting) {\n      const a = getPropertyValue(\".main-container\", \"background-color\");\n\n      console.log(a);\n\n      if (a === \"rgb(245, 245, 245)\") {\n        heading.classList.add(\"heading-white\");\n      }\n      // heading.classList.add(\"heading-scrolled\");\n    } else {\n      heading.classList.remove(\"heading-white\");\n    }\n  });\n},\nsectionOneOptions);\n\nsectionOneObserverOne.observe(sectionOne);\n\n// const observer = new IntersectionObserver(([entry]) => {\n//   const color = entry.isIntersecting ? \"#2c2323\" : \"#f5f5f5\";\n//   // document.documentElement.style.setProperty(\"--header-text-color\", color);\n//   console.log(color);\n// }, sectionOneOptions);\n\n// observer.observe(sectionOne);\n\nfunction getPropertyValue(selector, property) {\n  const element = document.querySelector(selector);\n  const compStyles = window.getComputedStyle(element);\n\n  return compStyles.getPropertyValue(property);\n}\n"],"names":["header","document","querySelector","sectionOne","heading","sectionOneOptions","rootMargin","sectionOneObserver","IntersectionObserver","entries","forEach","entry","isIntersecting","classList","remove","add","observe","sectionOneObserverOne","a","getPropertyValue","console","log","selector","property","element","window","getComputedStyle"],"version":3,"file":"index.f49aa4e9.js.map"}